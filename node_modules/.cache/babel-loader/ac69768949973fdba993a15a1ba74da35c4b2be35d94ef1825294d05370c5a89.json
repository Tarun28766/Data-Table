{"ast":null,"code":"'use client';\n\nimport React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { FocusTrap } from '../FocusTrap/FocusTrap.mjs';\nimport { Paper } from '../Paper/Paper.mjs';\nimport '../Transition/transitions.mjs';\nimport { Transition } from '../Transition/Transition.mjs';\nimport { useModalBaseContext } from './ModalBase.context.mjs';\nimport classes from './ModalBase.module.css.mjs';\nconst ModalBaseContent = forwardRef(({\n  transitionProps,\n  className,\n  innerProps,\n  onKeyDown,\n  style,\n  ...others\n}, ref) => {\n  const ctx = useModalBaseContext();\n  return /* @__PURE__ */React.createElement(Transition, {\n    mounted: ctx.opened,\n    transition: \"pop\",\n    ...ctx.transitionProps,\n    ...transitionProps\n  }, transitionStyles => /* @__PURE__ */React.createElement(\"div\", {\n    ...innerProps,\n    className: cx({\n      [classes.inner]: !ctx.unstyled\n    }, innerProps.className)\n  }, /* @__PURE__ */React.createElement(FocusTrap, {\n    active: ctx.opened && ctx.trapFocus\n  }, /* @__PURE__ */React.createElement(Paper, {\n    ...others,\n    component: \"section\",\n    role: \"dialog\",\n    tabIndex: -1,\n    \"aria-modal\": true,\n    \"aria-describedby\": ctx.bodyMounted ? ctx.getBodyId() : void 0,\n    \"aria-labelledby\": ctx.titleMounted ? ctx.getTitleId() : void 0,\n    ref,\n    style: [style, transitionStyles],\n    className: cx({\n      [classes.content]: !ctx.unstyled\n    }, className),\n    unstyled: ctx.unstyled\n  }, others.children))));\n});\nexport { ModalBaseContent };","map":{"version":3,"names":["ModalBaseContent","forwardRef","transitionProps","className","innerProps","onKeyDown","style","others","ref","ctx","useModalBaseContext","React","createElement","Transition","mounted","opened","transition","transitionStyles","cx","classes","inner","unstyled","FocusTrap","active","trapFocus","Paper","component","role","tabIndex","bodyMounted","getBodyId","titleMounted","getTitleId","content","children"],"sources":["/Users/tarun/Documents/Table/my-react-app/node_modules/@mantine/core/src/components/ModalBase/ModalBaseContent.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { BoxProps, ElementProps, MantineRadius, MantineShadow } from '../../core';\nimport { FocusTrap } from '../FocusTrap';\nimport { Paper } from '../Paper';\nimport { Transition, TransitionOverride } from '../Transition';\nimport { useModalBaseContext } from './ModalBase.context';\nimport classes from './ModalBase.module.css';\n\nexport interface ModalBaseContentProps extends BoxProps, ElementProps<'div'> {\n  /** Props passed down to the `Transition` component */\n  transitionProps?: TransitionOverride;\n\n  /** Key of `theme.shadows` or any valid CSS value to set `box-shadow`, `none` by default */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius, numbers are converted to rem, `theme.defaultRadius` by default */\n  radius?: MantineRadius;\n}\n\ninterface _ModalBaseContentProps extends ModalBaseContentProps {\n  innerProps: React.ComponentPropsWithoutRef<'div'>;\n}\n\nexport const ModalBaseContent = forwardRef<HTMLDivElement, _ModalBaseContentProps>(\n  ({ transitionProps, className, innerProps, onKeyDown, style, ...others }, ref) => {\n    const ctx = useModalBaseContext();\n\n    // const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    //   const shouldTrigger =\n    //     (event.target as HTMLElement)?.getAttribute('data-mantine-stop-propagation') !== 'true';\n    //   console.log((event.target as HTMLElement)?.getAttribute('data-mantine-stop-propagation'));\n    //   shouldTrigger && event.key === 'Escape' && ctx.closeOnEscape && ctx.onClose();\n    //   onKeyDown?.(event);\n    // };\n\n    return (\n      <Transition\n        mounted={ctx.opened}\n        transition=\"pop\"\n        {...ctx.transitionProps}\n        {...transitionProps}\n      >\n        {(transitionStyles) => (\n          <div\n            {...innerProps}\n            className={cx({ [classes.inner]: !ctx.unstyled }, innerProps.className)}\n          >\n            <FocusTrap active={ctx.opened && ctx.trapFocus}>\n              <Paper\n                {...others}\n                component=\"section\"\n                role=\"dialog\"\n                tabIndex={-1}\n                aria-modal\n                aria-describedby={ctx.bodyMounted ? ctx.getBodyId() : undefined}\n                aria-labelledby={ctx.titleMounted ? ctx.getTitleId() : undefined}\n                // onKeyDown={handleKeyDown}\n                ref={ref}\n                style={[style, transitionStyles]}\n                className={cx({ [classes.content]: !ctx.unstyled }, className)}\n                unstyled={ctx.unstyled}\n              >\n                {others.children}\n              </Paper>\n            </FocusTrap>\n          </div>\n        )}\n      </Transition>\n    );\n  }\n);\n"],"mappings":";;;;;;;;;;AAQY,MAACA,gBAAgB,GAAGC,UAAU,CACxC,CAAC;EAAEC,eAAe;EAAEC,SAAS;EAAEC,UAAU;EAAEC,SAAS;EAAEC,KAAK;EAAE,GAAGC;AAAQ,GAAEC,GAAG,KAAK;EAChF,MAAMC,GAAG,GAAGC,mBAAmB,EAAE;EACjC,sBAAuBC,KAAK,CAACC,aAAa,CACxCC,UAAU,EACV;IACEC,OAAO,EAAEL,GAAG,CAACM,MAAM;IACnBC,UAAU,EAAE,KAAK;IACjB,GAAGP,GAAG,CAACP,eAAe;IACtB,GAAGA;EACJ,GACAe,gBAAgB,IAAqB,eAAAN,KAAK,CAACC,aAAa,CACvD,KAAK,EACL;IACE,GAAGR,UAAU;IACbD,SAAS,EAAEe,EAAE,CAAC;MAAE,CAACC,OAAO,CAACC,KAAK,GAAG,CAACX,GAAG,CAACY;IAAQ,CAAE,EAAEjB,UAAU,CAACD,SAAS;EACvE,GACe,eAAAQ,KAAK,CAACC,aAAa,CAACU,SAAS,EAAE;IAAEC,MAAM,EAAEd,GAAG,CAACM,MAAM,IAAIN,GAAG,CAACe;EAAS,CAAE,EAAkB,eAAAb,KAAK,CAACC,aAAa,CACzHa,KAAK,EACL;IACE,GAAGlB,MAAM;IACTmB,SAAS,EAAE,SAAS;IACpBC,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAE,CAAC,CAAC;IACZ,YAAY,EAAE,IAAI;IAClB,kBAAkB,EAAEnB,GAAG,CAACoB,WAAW,GAAGpB,GAAG,CAACqB,SAAS,EAAE,GAAG,KAAK,CAAC;IAC9D,iBAAiB,EAAErB,GAAG,CAACsB,YAAY,GAAGtB,GAAG,CAACuB,UAAU,EAAE,GAAG,KAAK,CAAC;IAC/DxB,GAAG;IACHF,KAAK,EAAE,CAACA,KAAK,EAAEW,gBAAgB,CAAC;IAChCd,SAAS,EAAEe,EAAE,CAAC;MAAE,CAACC,OAAO,CAACc,OAAO,GAAG,CAACxB,GAAG,CAACY;IAAU,GAAElB,SAAS,CAAC;IAC9DkB,QAAQ,EAAEZ,GAAG,CAACY;EACf,GACDd,MAAM,CAAC2B,QACjB,CAAS,CACF,CACP,CAAK;AACF,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}